##############################################
# atruman843 9/14/17
# This program generate a weak, moderate, or strong password for you

def password(): # makes a function called password

    import random # imports random function
    import string # imports string function

    print('A weak password contains a common word or phrase that you use.')
    print('A moderate password contains a sequence of random letters and numbers.')
    print('''A strong password will contain a sequence or random upper case letters, 
    random lower case letters, numbers, and symbols''')

    list = ['wingardium leviosa', 'toad', 'reparo', 'deathstick', 'heartstring', 'unicorn', 'phoenix', 'revealer',
            'quick-quotes quill', 'self-shuffling', 'omniocular', 'trunk', 'erised', "marauder's map",'howler', 'remembrall',
            'parselmouth', 'azkaban', 'headmaster', 'headmistress', 'mead', 'floo powder', 'fiendfyre', 'shrieking shack',
            'parseltongue', 'dementor', 'apparate', 'quibbler', 'patronus', 'haversacking', 'nimbus', 'firebolt', 'keeper',
            'beater', 'chaser', 'seeker', 'bludger', 'quaffle', 'snitch', 'dark mark', 'mandrake', 'dragon', 'gringotts',
            'occlumens', 'wizard', 'witch', 'skrewt', 'basilisk', 'squib', 'polyjuice potion', 'skele-gro', 'bubotuber',
            'floo network', 'disapparate', 'apparition', 'broomstick', 'divination', 'herbology', 'charms', 'potions',
            'transfiguration', 'sectumsempra', 'veritaserum', 'runes', 'owl', 'newt', 'outstanding', 'dark lord',
            'deluminator', 'quill', 'sneakoscope', 'niffler', 'mudblood', 'auror', 'animagus', 'imperio', 'horcrux',
            'hallow', 'unbreakable vow', 'avada kedavra', 'aguamenti', 'cruciatus', 'engorgio', 'triwizard tournament',
            'ravenclaw', 'slytherin', 'hufflepuff', 'griffindor', 'cauldron', 'wand', 'quidditch', 'wronski feint',
            'pensieve', 'legilimens', 'occlumency', 'butterbeer', 'canary cream', 'fizzing whizbee', 'cockroach cluster',
            'spellotape', 'accio', 'goblin', 'jinx', 'hex', 'charm', 'arithmancy', 'expelliarmus', 'stupefy', 'alohomora',
            'centaur', 'wingardium leviosa', 'morsmordrewa']
# the above list contains 'weak passwords'; all are Harry Potter related

    s = input('Would you like a weak password? : ')
    if s.lower() == 'yes': # This part prints a weak password from the above list.
        a = random.randint(1, len(list) + 1)
        # this chooses a random number to index the above list and prints out a word based on that random number
        x = a
        print('password:', list[x])

    while s.lower() != 'yes':
        s = input('Moderate or Strong? : ')
        if s.lower() == 'moderate': # This part is for moderate passwords
            y = int(input('If moderate, how many characters long should the password be? : '))
            # allows you to generate a password of the length you wish
            c = [] # define a list to store letters and numbers
            while len(c) < y:
                # opens while loop (persists until the length of the list is the length of the desired password)
                c.append(random.choice(string.ascii_letters)) # adds random letters to list 'c'
                c.append(str(random.randint(1, 9))) # adds random numbers to list 'c'
            print('password:', ''.join(c)) # prints the password with 'c' as a string
            break
        elif s.lower() == 'strong': # This prints out a strong password
            z = int(input('If strong, how many characters ong should the password be? : '))
            # define a list to store letters and numbers
            c = []
            while len(c) < z:
                # opens while loop (persists until the length of the list is the length of the desired password)
                c.append(random.choice(string.ascii_letters)) # adds random letters to list 'c'
                c.append(str(random.randint(1, 9))) # adds random numbers to list 'c'
                c.append(random.choice(string.punctuation)) # adds random punctuation to list 'c'
            print('password:', ''.join(c)) # prints the password with 'c' as a string
            break
        else:
            print('Please, enter a valid response')
            # if the user does not give a valid response, it instructs them to do so
password() # runs the function 'password'